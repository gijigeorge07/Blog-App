{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\datas\\\\Blog project\\\\MERN-Assignment-frontend-main\\\\src\\\\components\\\\post\\\\AddPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useToken from \"../userAccounts/useToken\";\nimport ErrorPage from \"../error/Error\";\nimport \"../article/Article.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = () => {\n  _s();\n\n  const {\n    token\n  } = useToken();\n  const [postValues, setPostValues] = useState({\n    title: \"\",\n    description: \"\",\n    name: token.uname\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setPostValues({ ...postValues,\n      [name]: value\n    });\n  }\n\n  async function fetchPost() {\n    const name = postValues.name;\n    const title = postValues.title;\n    const description = postValues.description;\n\n    if (title !== \"\" && description !== \"\") {\n      const response = await fetch(`/api/posts/post`, {\n        method: \"post\",\n        body: JSON.stringify({\n          title,\n          description,\n          name\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token.token}`\n        }\n      });\n      const body = await response.json();\n\n      if (body.status === \"Success\") {\n        alert(\"Post Successful\");\n        setPostValues({\n          title: \"\",\n          description: \"\",\n          name: token.uname\n        });\n      } else {\n        alert(\"Post Unsuccessful!\");\n      }\n    } else {\n      alert(\"Enter all required fields.\");\n    }\n  }\n\n  if (!token.admin) return /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogPost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"commentHeading\",\n        children: \"Publish New Blog Article..!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"titleTextBox\",\n          name: \"title\",\n          value: postValues.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"20\",\n          cols: \"100\",\n          name: \"description\",\n          value: postValues.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPost,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPost, \"7kGDG25q8NY6MS2i6340SiyTwT8=\", false, function () {\n  return [useToken];\n});\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/datas/Blog project/MERN-Assignment-frontend-main/src/components/post/AddPost.js"],"names":["React","useState","useToken","ErrorPage","AddPost","token","postValues","setPostValues","title","description","name","uname","handleChange","event","value","target","fetchPost","response","fetch","method","body","JSON","stringify","headers","Authorization","json","status","alert","admin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useToken from \"../userAccounts/useToken\";\nimport ErrorPage from \"../error/Error\";\nimport \"../article/Article.css\";\n\nconst AddPost = () => {\n  const { token } = useToken();\n  const [postValues, setPostValues] = useState({\n    title: \"\",\n    description: \"\",\n    name: token.uname,\n  });\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setPostValues({ ...postValues, [name]: value });\n  }\n  async function fetchPost() {\n    const name = postValues.name;\n    const title = postValues.title;\n    const description = postValues.description;\n\n    if (title !== \"\" && description !== \"\") {\n      const response = await fetch(`/api/posts/post`, {\n        method: \"post\",\n        body: JSON.stringify({ title, description, name }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token.token}`,\n        },\n      });\n      const body = await response.json();\n\n      if (body.status === \"Success\") {\n        alert(\"Post Successful\");\n        setPostValues({ title: \"\", description: \"\", name: token.uname });\n      } else {\n        alert(\"Post Unsuccessful!\");\n      }\n    } else {\n      alert(\"Enter all required fields.\");\n    }\n  }\n  if (!token.admin) return <ErrorPage />;\n  return (\n    <div className=\"blogPost\">\n      <div className=\"addComment\">\n        <h3 className=\"commentHeading\">Publish New Blog Article..!</h3>\n        <label>\n          Title:\n          <br></br>\n          <input\n            type=\"text\"\n            className=\"titleTextBox\"\n            name=\"title\"\n            value={postValues.title}\n            onChange={handleChange}\n          />\n        </label>\n        <br></br>\n        <label>\n          Description:\n          <br />\n          <textarea\n            rows=\"20\"\n            cols=\"100\"\n            name=\"description\"\n            value={postValues.description}\n            onChange={handleChange}\n          ></textarea>\n        </label>\n        <br></br>\n        <button onClick={fetchPost}>Submit</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddPost;\n"]},"metadata":{},"sourceType":"module"}